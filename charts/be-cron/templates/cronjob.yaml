apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "app.fullname" . }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  schedule: {{ .Values.schedule | quote }}
  concurrencyPolicy: {{ .Values.concurrencyPolicy }}
  startingDeadlineSeconds: {{ .Values.startingDeadlineSeconds }}
  successfulJobsHistoryLimit: {{ .Values.successfulJobsHistoryLimit }}
  suspend: {{ .Values.suspend }}
  jobTemplate:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        {{- include "app.labels" . | nindent 8 }}
    spec:
      backoffLimit: {{ .Values.backoffLimit }}
      template:
        metadata:
          labels:
            {{- include "app.labels" . | nindent 12 }}
        spec:
          {{- with .Values.image.pullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 8 }}
          {{- end }}
          {{- with .Values.priorityClassName }}
          priorityClassName: {{ . | quote }}
          {{- end }}
          {{- with .Values.podSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          containers:
            - name: {{ .Chart.Name }}
              {{- with .Values.securityContext }}
              securityContext:
                {{- toYaml . | nindent 16 }}
              {{- end }}
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default "latest" }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              {{- with .Values.command }}
              command:
                {{- toYaml . | nindent 16 }}
              {{- end }}
              env:
                {{- range $key, $value := .Values.envValueFrom }}
                - name: {{ $key }}
                  valueFrom:
                    {{- toYaml $value | nindent 20 }}
                {{- end }}
                {{- range $key, $value := .Values.env }}
                - name: {{ $key }}
                  value: {{ $value | quote }}
                {{- end }}
              envFrom:
                {{- with .Values.envFrom }}
                {{- toYaml . | nindent 16 }}
                {{- end }}
                - configMapRef:
                    name: {{ include "app.fullname" . }}
                - secretRef:
                    name: {{ include "app.fullname" . }}
              {{- with .resources | default .Values.resources }}
              resources:
                {{- toYaml . | nindent 16 }}
              {{- end }}
              volumeMounts:
              {{- if .Values.configVolume.enabled }}
                - name: config-vol
                  mountPath: {{ .Values.configVolume.mountPath | default "/config" }}
              {{- end }}
              {{- if .Values.secretsVolume.enabled }}
                - name: secrets-vol
                  mountPath: {{ .Values.secretsVolume.mountPath | default "/secrets" }}
              {{- end }}
          volumes:
          {{- if .Values.configVolume.enabled }}
            - name: config-vol
              configMap:
                name: {{ include "app.fullname" . }}-vol
          {{- end }}
          {{- if .Values.secretsVolume.enabled }}
            - name: secrets-vol
              secret:
                secretName: {{ include "app.fullname" . }}-vol
                defaultMode: {{ .Values.secretsVolume.mode | default "0400" }}
          {{- end }}
          restartPolicy: {{ .Values.restartPolicy }}
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
