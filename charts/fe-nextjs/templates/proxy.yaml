{{- if .Values.staticProxy.enabled }}
{{- $fullName := include "app.fullname" . -}}
{{- $svcPort := .Values.staticProxy.service.port -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
apiVersion: v1
kind: Service
metadata:
  name: {{ $fullName }}-static-proxy
  labels:
    {{- include "app.proxyLabels" . | nindent 4 }}
  {{- with .Values.staticProxy.service.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  type: ExternalName
  externalName: {{ .Values.staticProxy.service.externalName | quote }}
  {{- with .Values.staticProxy.service.clusterIP }}
  clusterIP: {{ . }}
  {{- end }}
  ports:
    - name: http
      port: {{ $svcPort }}
      {{- if and (or (eq .Values.staticProxy.service.type "NodePort") (eq .Values.staticProxy.service.type "LoadBalancer")) .Values.staticProxy.service.nodePort }}
      nodePort: {{ .Values.staticProxy.service.nodePort }}
      {{- end }}
      targetPort: {{ .Values.staticProxy.service.targetPort }}
      protocol: TCP
      {{- if semverCompare ">=1.20-0" .Capabilities.KubeVersion.GitVersion }}
      appProtocol: http
      {{- end }}
  selector:
    {{- include "app.proxySelectorLabels" . | nindent 4 }}
---
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else -}}
apiVersion: networking.k8s.io/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}-static-proxy
  labels:
    {{- include "app.labels" . | nindent 4 }}
  annotations:
    nginx.ingress.kubernetes.io/upstream-vhost: {{ .Values.staticProxy.service.externalName | quote }}
    nginx.ingress.kubernetes.io/rewrite-target: {{ .Values.staticProxy.ingress.path.backend | quote }}
    {{- with .Values.staticProxy.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- if and .Values.staticProxy.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.staticProxy.ingress.className }}
  {{- end }}
  {{- if .Values.staticProxy.ingress.tls }}
  tls:
    {{- range .Values.staticProxy.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.staticProxy.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - path: {{ $.Values.staticProxy.ingress.path.public | quote }}
            {{- if and $.Values.staticProxy.ingress.pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ $.Values.staticProxy.ingress.pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}-static-proxy
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}-static-proxy
              servicePort: {{ $svcPort }}
              {{- end }}
    {{- end }}
{{- end }}
