image:
  repository: nginx
  tag: latest
  pullPolicy: IfNotPresent
  pullSecrets: []

# -- Custom labels to add into metadata
labels: {}
  # foo: bar

podAnnotations: {}

replicas: 1

## Create HorizontalPodAutoscaler object for deployment type
#
autoscaling:
  enabled: false
  minReplicas: 3
  maxReplicas: 5
  targetCPUUtilizationPercentage: 500
  targetMemoryUtilizationPercentage: 175

## See `kubectl explain poddisruptionbudget.spec` for more
## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
podDisruptionBudget: {}
#  minAvailable: 1
#  maxUnavailable: 1

## See `kubectl explain deployment.spec.strategy` for more
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
deploymentStrategy:
  type: RollingUpdate

service:
  annotations: {}
  type: ClusterIP
  port: "8000"
  containerPort: "80"
  # nodePort:

ingress:
  enabled: false
  # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
  # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
  # className: nginx
  # Values can be templated
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"

  # pathType is only for k8s >= 1.1=
  pathType: Prefix

  hosts:
    - app.local
  tls: []
  #  - secretName: app-tls
  #    hosts:
  #      - app.local

resources:
  limits:
    memory: 32Mi
  requests:
    cpu: 10m
    memory: 16Mi

nodeSelector: {}

tolerations: []

affinity: {}
  # podAntiAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #   - labelSelector:
  #       matchExpressions:
  #       - key: app
  #         operator: In
  #         values:
  #         - example
  #     topologyKey: "kubernetes.io/hostname"

## Optional priorityClassName
priorityClassName: ""

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

volumes: []
volumeMounts: []

env: {}
envFrom: []

envValueFromObjectField: {}
  # POD_IP: status.podIP

nginxConfig:
  enabled: false
