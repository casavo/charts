{{- range .Values.hooks }}
{{ $hdata := dict "hook" . "globals" $ }}
{{ $imgdata := .image | default $.Values.image }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "app.fullname" $ }}-hook-{{ .name | replace "_" "-" }}
  labels:
    {{- include "app.hookLabels" $hdata | nindent 4 }}
  annotations:
    helm.sh/hook: {{ .on | default "pre-install,pre-upgrade" }}
    helm.sh/hook-weight: {{ .weight | default "0" | quote }}
    helm.sh/hook-delete-policy: before-hook-creation
spec:
  template:
    metadata:
      name: {{ include "app.fullname" $ }}-hook-{{ .name | replace "_" "-" }}
      labels:
        {{- include "app.hookLabels" $hdata | nindent 8 }}
    spec:
      {{- with $imgdata.pullSecrets | default $.Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.priorityClassName }}
      priorityClassName: {{ . | quote }}
      {{- end }}
      {{- with $.Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ $.Chart.Name }}
          {{- with $.Values.securityContext }}
          securityContext:
            {{- toYaml $.Values.securityContext | nindent 12 }}
          {{- end }}
          image: "{{ $imgdata.repository | default $.Values.image.repository }}:{{ $imgdata.tag | default $.Values.image.tag }}"
          imagePullPolicy: {{ $imgdata.pullPolicy | default $.Values.image.pullPolicy }}
          {{- with .command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .args }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            {{- range $key, $value := $.Values.envValueFrom }}
            - name: {{ $key }}
              valueFrom:
                {{- toYaml $value | nindent 16 }}
            {{- end }}
            {{- with .envValueFrom }}
            {{- range $key, $value := . }}
            - name: {{ $key }}
              valueFrom:
                {{- toYaml $value | nindent 16 }}
            {{- end }}
            {{- end }}
            {{- range $key, $value := $.Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- with .env }}
            {{- range $key, $value := . }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
          envFrom:
            {{- with $.Values.envFrom }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- if $.Values.hooksConfig }}
            - configMapRef:
                name: {{ include "app.fullname" $ }}-hook
            {{- end }}
            {{- if $.Values.hooksSecret }}
            - secretRef:
                name: {{ include "app.fullname" $ }}-hook
            {{- end }}
            {{- with .envFrom }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .resources | default $.Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
          {{- if and $.Values.configVolume.enabled $.Values.hooksConfig }}
            - name: config-vol
              mountPath: {{ $.Values.configVolume.mountPath | default "/config" }}
          {{- end }}
          {{- if and $.Values.secretsVolume.enabled $.Values.hooksSecret }}
            - name: secrets-vol
              mountPath: {{ $.Values.secretsVolume.mountPath | default "/secrets" }}
          {{- end }}
      volumes:
      {{- if and $.Values.configVolume.enabled $.Values.hooksConfig }}
        - name: config-vol
          configMap:
            name: {{ include "app.fullname" $ }}-vol-hook
      {{- end }}
      {{- if and $.Values.secretsVolume.enabled $.Values.hooksSecret }}
        - name: secrets-vol
          secret:
            secretName: {{ include "app.fullname" $ }}-vol-hook
            defaultMode: {{ $.Values.secretsVolume.mode | default "0400" }}
      {{- end }}
      restartPolicy: "{{ .restartPolicy | default "OnFailure" }}"
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
