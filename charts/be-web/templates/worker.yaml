{{- range $key, $val := .Values.workers }}
{{ $wdata := dict "name" $key "worker" $val "globals" $ }}
{{ $imgdata := $val.image | default $.Values.image }}
{{ $kind := $val.kind | default "Deployment" }}
---
{{- with $val }}
apiVersion: apps/v1
kind: {{ $kind }}
metadata:
  name: {{ include "app.fullname" $ }}-wrk-{{ $key | replace "_" "-" }}
  labels:
    {{- include "app.workerLabels" $wdata | nindent 4 }}
spec:
  {{- if eq $kind "StatefulSet" }}
  serviceName: {{ include "app.fullname" $ }}-wrk-{{ $key | replace "_" "-" }}
  {{- end }}
  {{- with .autoscaling }}
  {{- if not .enabled }}
  replicas: {{ $val.replicas | default "1" }}
  {{- end }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "app.workerSelectorLabels" $wdata | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- with $.Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") $ | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") $ | sha256sum }}
        {{- with $val.monitoring }}
        prometheus.io/path: {{ .metrics.path | default "/metrics" }}
        prometheus.io/port: {{ .metrics.port | default "http" | quote }}
        prometheus.io/scrape: {{ .metrics.enabled | default false | quote }}
        {{- end }}
      labels:
        {{- include "app.workerLabels" $wdata | nindent 8 }}
    spec:
      {{- with $imgdata.pullSecrets | default $.Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.serviceAccount }}
      serviceAccountName: {{ . | quote }}
      {{- end }}
      {{- with $.Values.priorityClassName }}
      priorityClassName: {{ . | quote }}
      {{- end }}
      {{- with $.Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ $.Chart.Name }}
          {{- with $.Values.securityContext }}
          securityContext:
            {{- toYaml $.Values.securityContext | nindent 12 }}
          {{- end }}
          image: "{{ $imgdata.repository | default $.Values.image.repository }}:{{ $imgdata.tag | default $.Values.image.tag }}"
          imagePullPolicy: {{ $imgdata.pullPolicy | default $.Values.image.pullPolicy }}
          {{- with .command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            {{- range $key, $value := $.Values.envValueFrom }}
            - name: {{ $key }}
              valueFrom:
                {{- toYaml $value | nindent 16 }}
            {{- end }}
            {{- with .envValueFrom }}
            {{- range $key, $value := . }}
            - name: {{ $key }}
              valueFrom:
                {{- toYaml $value | nindent 16 }}
            {{- end }}
            {{- end }}
            {{- range $key, $value := $.Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- with .env }}
            {{- range $key, $value := . }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
          envFrom:
            {{- with $.Values.envFrom }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- with .envFrom }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            - configMapRef:
                name: {{ include "app.fullname" $ }}
            - secretRef:
                name: {{ include "app.fullname" $ }}
          {{- with .ports }}
          ports:
            {{- range $portName, $portValue := . }}
            - name: {{ $portName }}
              containerPort: {{ $portValue }}
              protocol: TCP
            {{- end }}
          {{- end }}
          {{- with .probes }}
          {{- with .liveness }}
          livenessProbe:
            {{- if .enabled }}
            httpGet:
              path: {{ .path }}
              port: {{ .port }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            failureThreshold: {{ .failureThreshold }}
            {{- end }}
          {{- end }}
          {{- with .readiness }}
          readinessProbe:
            {{- if .enabled }}
            httpGet:
              path: {{ .path }}
              port: {{ .port }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            failureThreshold: {{ .failureThreshold }}
            {{- end }}
          {{- end }}
          {{- with .startup }}
          startupProbe:
            {{- if .enabled }}
            httpGet:
              path: {{ .path }}
              port: {{ .port }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            failureThreshold: {{ .failureThreshold }}
            {{- end }}
          {{- end }}
          {{- end }}
          {{- with .resources | default $.Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
          {{- if $.Values.configVolume.enabled }}
            - name: config-vol
              mountPath: {{ $.Values.configVolume.mountPath | default "/config" }}
          {{- end }}
          {{- if $.Values.secretsVolume.enabled }}
            - name: secrets-vol
              mountPath: {{ $.Values.secretsVolume.mountPath | default "/secrets" }}
          {{- end }}
          {{- with $.Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
      {{- if $.Values.configVolume.enabled }}
        - name: config-vol
          configMap:
            name: {{ include "app.fullname" $ }}-vol
      {{- end }}
      {{- if $.Values.secretsVolume.enabled }}
        - name: secrets-vol
          secret:
            secretName: {{ include "app.fullname" $ }}-vol
            defaultMode: {{ $.Values.secretsVolume.mode | default "0400" }}
      {{- end }}
      {{- with $.Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
{{- end }}
